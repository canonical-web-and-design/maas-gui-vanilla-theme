// Calculates REM value
@function calculate-rem($size) {
  $rem-size: $size / 16px;
  @return $rem-size * 1rem;
}

// Creates REM and PX font size
@mixin font-size($size) {
  // scss-lint:disable DuplicateProperty
  font-size: $size;
  font-size: calculate-rem($size);
  // scss-lint:enable DuplicateProperty
}

// Keyframe mixin
@mixin keyframe ($animation-name) {
  @keyframes $animation-name {
    @content;
  }
}

// Creates url friendly colour fill
@function url-friendly-color($color) {
  @if type-of($color) != 'color' {
    @warn '#{$fill-color} is not a color.';
    @return false;
  } @else {
    @return '%23' + str-slice('#{$color}', 2, -1);
  }
}

// String Replace
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Font Face
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff ttf svg) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_')
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype'
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}
